"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7542],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=u(r),d=a,h=f["".concat(l,".").concat(d)]||f[d]||p[d]||o;return r?n.createElement(h,s(s({ref:t},c),{},{components:r})):n.createElement(h,s({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5497:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={},s="Features SLA",i={unversionedId:"reference/how-does-raptor-work/features/feature-sla",id:"reference/how-does-raptor-work/features/feature-sla",title:"Features SLA",description:"Raptor helps you deploy and manage Operative Features in production, and operative production flows expect strict",source:"@site/docs/reference/how-does-raptor-work/features/feature-sla.md",sourceDirName:"reference/how-does-raptor-work/features",slug:"/reference/how-does-raptor-work/features/feature-sla",permalink:"/docs/reference/how-does-raptor-work/features/feature-sla",draft:!1,editUrl:"https://github.com/raptor-ml/docs/tree/master/docs/reference/how-does-raptor-work/features/feature-sla.md",tags:[],version:"current",frontMatter:{},sidebar:"reference",previous:{title:"Feature Definitions",permalink:"/docs/reference/how-does-raptor-work/features/feature-definitions"},next:{title:"Feature Values",permalink:"/docs/reference/how-does-raptor-work/features/feature-values"}},l={},u=[],c={toc:u};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"features-sla"},"Features SLA"),(0,a.kt)("p",null,"Raptor helps you deploy and manage Operative Features in production, and operative production flows expect strict ",(0,a.kt)("strong",{parentName:"p"},"\nguarantees"),' of time to response (latency), freshness of data, consistency, availability, and resilience to dynamic\nconditions such as a spike in usage or a return from downtime ("thundering herd" phenomena).'),(0,a.kt)("p",null,"Raptor allows you to express your desired guarantees in a friendly form, and Raptor will configure the connectors,\ncompute and storage resources to ensure that guarantees are kept."),(0,a.kt)("p",null,"When creating the Feature Definition, you specify three important values: ",(0,a.kt)("strong",{parentName:"p"},"Freshness, Staleness, and Deadline.")),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(5681).Z,width:"668",height:"237"})),(0,a.kt)("p",null,'When a feature value is requested, Raptor checks whether a value stored in its Feature Store is fresh. A feature value\nis considered fresh if the time it was calculated was at most "',(0,a.kt)("strong",{parentName:"p"},"Freshness"),'" ago. For example, if the Freshness\ndefinition for a feature is 1s, then any value that is less than 1 second old in the store can be returned immediately\nwithout recalculation. Any value older than 1 second ago is considered non-fresh.'),(0,a.kt)("p",null,"A non-fresh feature value might still be served if it's not ",(0,a.kt)("strong",{parentName:"p"},"Stale"),". ",(0,a.kt)("strong",{parentName:"p"},"Staleness")," defines when a feature value cannot\nbe served under any circumstances, and must be recalculated."),(0,a.kt)("p",null,"Freshness would usually be shorter than Staleness, and if a feature is not fresh anymore but not yet stale, Raptor will\ntry to calculate a new value within the ",(0,a.kt)("strong",{parentName:"p"},"Deadline")," . If calculation finishes within the deadline (remember, it might\ninclude accessing external high-latency services), the newly calculated value is returned. Otherwise, the cached value (\nwhich is not fresh but is also not stale yet) is returned."),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"Deadline")," mechanism ensures responses will always be sent within a guaranteed timeframe. For example, if you're\nimplementing personalization in the user flow then keeping latency low or unnoticeable to the user is key."),(0,a.kt)("p",null,"Here's a summary of the logic of freshness, staleness and deadline:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Fresh feature values are returned immediately"),(0,a.kt)("li",{parentName:"ol"},"Non-fresh but non-stale values may be returned up to the deadline if recalculation took too long, otherwise the\nrecalculated value is available before the deadline."),(0,a.kt)("li",{parentName:"ol"},"Stale values are never returned. Raptor will try to recalculate the feature value for up to the Deadline time, and if\nunable to do so - return an error.")))}p.isMDXComponent=!0},5681:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/feature-sla-a88bfb0e267d39532778046a222836ae.png"}}]);